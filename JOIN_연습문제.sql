-- 1. 2020년 12월 15일이 무슨 요일인지 조회하시오.
SELECT TO_CHAR(TO_DATE(20201215),'day') FROM DUAL;
SELECT TO_CHAR('20201215', 'day') FROM DUAL;


-- 2. 주민번호가 70년대 생이면서 성별이 여자이고, 성이 전씨인 직원들의
-- 사원명, 주민번호, 부서명, 직급명을 조회하시오.
SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;
SELECT * FROM JOB;
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE E, DEPARTMENT, JOB J
WHERE DEPT_CODE = DEPT_ID AND  E.JOB_CODE = J.JOB_CODE
AND SUBSTR(EMP_NO,1,1) = 7 AND SUBSTR(EMP_NO,8,1) = 2 AND EMP_NAME LIKE '전%';

SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE=DEPT_ID)
JOIN JOB USING (JOB_CODE)
WHERE SUBSTR(EMP_NO,1,1)=7 AND SUBSTR(EMP_NO,8,1) = 2 AND EMP_NAME LIKE '전%';

-- 3. 가장 나이가 적은 직원의 사번, 사원명, 나이, 부서명, 직급명을 조회하시오.
SELECT * FROM EMPLOYEE;
SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE=DEPT_ID)
JOIN JOB USING (JOB_CODE)
WHERE SUBSTR(EMP_NO,1,2) = (SELECT MAX(SUBSTR(EMP_NO,1,2)) FROM EMPLOYEE);


-- 4. 이름에 '형'자가 들어가는 직원들의 사번, 사원명, 부서명을 조회하시오.
SELECT EMP_ID, EMP_NAME, DEPT_TITLE FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE EMP_NAME LIKE '%형%';


-- 5. 해외영업팀에 근무하는 사원명, 직급명, 부서코드, 부서명을 조회하시오.
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING (JOB_CODE)
WHERE DEPT_TITLE LIKE '해외영업%';
SELECT * FROM DEPARTMENT;

-- 6. 보너스포인트를 받는 직원들의 사원명, 보너스포인트, 부서명, 근무지역명을 조회하시오.
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE BONUS IS NOT NULL;
SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;
SELECT * FROM LOCATION;

-- 7. 부서코드가 D2인 직원들의 사원명, 직급명, 부서명, 근무지역명을 조회하시오.
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
WHERE DEPT_CODE = 'D2';


-- 8. 연봉의 최소급여(MIN_SAL)보다 많이 받는 직원들의
-- 사원명, 직급명, 급여, 연봉을 조회하시오.
-- 연봉에 보너스포인트를 적용하시오.
SELECT EMP_NAME, JOB_NAME, SALARY AS 급여 , (SALARY*12)*NVL(1+BONUS,1) AS 연봉 FROM EMPLOYEE E
JOIN JOB USING (JOB_CODE)
JOIN SAL_GRADE S ON ((SALARY*12)*NVL(1+BONUS,1) > MIN_SAL*12 AND E.SAL_LEVEL = S.SAL_LEVEL );


SELECT * FROM JOB;
SELECT * FROM EMPLOYEE;
SELECT * FROM SAL_GRADE;
SELECT EMP_NAME, BONUS FROM EMPLOYEE;
SELECT NVL(1+BONUS,1) FROM EMPLOYEE;
SELECT EMP_NAME, (SALARY*12)*NVL(1+BONUS,1) FROM EMPLOYEE;

-- 9. 한국(KO)과 일본(JP)에 근무하는 직원들의 사원명, 부서명, 지역명, 국가명을 조회하시오.
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
JOIN NATIONAL USING (NATIONAL_CODE)
WHERE NATIONAL_CODE IN('KO','JP');
SELECT * FROM EMPLOYEE;
SELECT * FROM NATIONAL;
SELECT * FROM LOCATION;
SELECT * FROM DEPARTMENT;

-- 10. 같은 부서에 근무하는 직원들의 사원명, 부서코드, 동료이름을 조회하시오.
-- self join 사용
SELECT E.EMP_NAME, E.DEPT_CODE, EMP_NAME FROM EMPLOYEE E, EMPLOYEE M;
SELECT * FROM EMPLOYEE;

-- 11. 보너스 포인트가 없는 직원들 중에서 직급코드가 j4, j7인 직원들의 사원명, 직급명, 급여를 조회하시오.
-- 단 join 과 in 사용할 것
SELECT EMP_NAME, JOB_NAME, SALARY FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
WHERE BONUS IS NULL AND JOB_CODE IN('J4','J7');

SELECT * FROM JOB;

-- 12. 재직중인 직원과 퇴사한 직원의 수를 조회하시오.
SELECT * FROM EMPLOYEE;

SELECT CASE WHEN ENT_DATE IS NULL THEN '1'
    WHEN ENT_DATE IS NOT NULL THEN '0'
    END AS 퇴사 FROM EMPLOYEE;

SELECT COUNT(*)-COUNT(ENT_DATE) AS 재직자수 , COUNT(ENT_DATE) AS 퇴직자수 FROM EMPLOYEE;

